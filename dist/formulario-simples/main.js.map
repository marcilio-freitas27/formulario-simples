{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/cadastra-usuario/cadastra-usuario.component.ts","./src/app/cadastra-usuario/cadastra-usuario.component.html","./src/app/exibe-usuario/exibe-usuario.component.ts","./src/app/exibe-usuario/exibe-usuario.component.html","./src/app/models/cadastro.service.ts","./src/app/models/novousuario.ts","./src/app/models/usuario.ts","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { CadastraUsuarioComponent } from './cadastra-usuario/cadastra-usuario.component';\nimport { ExibeUsuarioComponent } from './exibe-usuario/exibe-usuario.component';\n\nconst routes: Routes = [\n  { path: \"\", component: CadastraUsuarioComponent },\n  { path: \"listar\", component: ExibeUsuarioComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'formulario-simples';\n}\n","<!-- CSS only -->\n<link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3\" crossorigin=\"anonymous\">\n<!-- JavaScript Bundle with Popper -->\n<script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js\" integrity=\"sha384-ka7Sk0Gln4gmtz2MlQnikT1wXgYsOg+OMhuP+IlRH9sENBO0LRn5q+8nbTov4+1p\" crossorigin=\"anonymous\"></script>\n<router-outlet></router-outlet>\n","import { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { CadastraUsuarioComponent } from './cadastra-usuario/cadastra-usuario.component';\nimport { ExibeUsuarioComponent } from './exibe-usuario/exibe-usuario.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CadastraUsuarioComponent,\n    ExibeUsuarioComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    ReactiveFormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { CadastroService } from '../models/cadastro.service';\nimport { Usuario } from '../models/usuario';\n\n@Component({\n  selector: 'app-cadastra-usuario',\n  templateUrl: './cadastra-usuario.component.html',\n  styleUrls: ['./cadastra-usuario.component.css']\n})\nexport class CadastraUsuarioComponent implements OnInit {\n\n  // formControl: FormControl;\n  formGroup: FormGroup;\n  usuario: Usuario;\n  // nome: FormControl;\n  // fone: FormControl;\n  constructor(private cadastroService: CadastroService, private formBuilder: FormBuilder) {\n    this.usuario = new Usuario('','');\n    this.formGroup = this.formBuilder.group({\n      nome : [this.usuario.nome,Validators.required],\n      fone : [this.usuario.telefone,Validators.required],\n    });\n\n  }\n\n  ngOnInit(): void {\n  }\n\n  // onSubmit() {\n  // TODO: Use EventEmitter with form value\n  //   console.warn(this.formGroup.value);\n  //   this.adicionar(this.formGroup.value['nome'],this.formGroup.value['fone']);\n  // }\n\n  adicionar(nome:string, numero:string): void {\n    const usuario = new Usuario(nome, numero);\n    this.cadastroService.adicionarUsuario(usuario);\n    this.formGroup.reset();\n  }\n\n\n}\n","<nav class=\"nav navbar navbar-dark bg-dark\">\n  <div class=\"navbar-brend\">\n    <li class=\"nav-item\">\n      <a class=\"nav-link active text-white\" routerLink=\"/listar\">Lista de usu√°rios</a>\n    </li>\n  </div>\n</nav>\n\n<form [formGroup]=\"formGroup\" role=\"form\">\n  <!-- <form [formGroup]=\"formGroup\" (ngSubmit)=\"onSubmit()\" role=\"form\"></form> -->\n  <h3 class=\"text-center m-3\">Cadastro de usu√°rios</h3>\n\n  <div class=\"container\">\n    <div class=\"form-group m-3\">\n      <label for=\"nome\">Nome</label>\n      <!-- <input type=\"text\" id=\"nome\" name=\"nome\" class=\"form-control\" id=\"\" placeholder=\"Nome Sobrenome...\" #novoNome> -->\n      <input type=\"text\" id=\"nome\" name=\"nome\" class=\"form-control\" id=\"\" formControlName=\"nome\" placeholder=\"Nome Sobrenome...\">\n    </div>\n    <div class=\"form-group m-3\">\n      <label for=\"fone\">Telefone</label>\n      <!-- <input type=\"text\" id=\"fone\" name=\"fone\" class=\"form-control\" id=\"\" placeholder=\"(xx) xxxxx-xxxx\" #novoTelefone> -->\n      <input type=\"text\" id=\"fone\" name=\"fone\" class=\"form-control\" id=\"\" formControlName=\"fone\" placeholder=\"(xx) xxxxx-xxxx\">\n    </div>\n\n    <div class=\"m-3\">\n      <!-- <input type=\"button\" class=\"btn btn-dark\" value=\"Cadastrar\" (click)=\"adicionar(\n        novoNome.value,\n        novoTelefone.value\n      )\"> -->\n      <!-- <input type=\"button\" class=\"btn btn-dark\" value=\"Cadastrar\" (click)=\"adicionar(\n        nome.value,\n        fone.value\n      )\"> -->\n      <input type=\"submit\" class=\"btn btn-dark\" [disabled]=\"!formGroup.valid\" value=\"Cadastrar\" (click)=\"adicionar(\n        formGroup.value.nome,\n        formGroup.value.fone\n      )\">\n    </div>\n  </div>\n</form>\n\n","import { Component, OnInit } from '@angular/core';\r\nimport { CadastroService } from '../models/cadastro.service';\r\nimport { Novousuario } from '../models/novousuario';\r\nimport { Usuario } from '../models/usuario';\r\n\r\n@Component({\r\n  selector: 'app-exibe-usuario',\r\n  templateUrl: './exibe-usuario.component.html',\r\n  styleUrls: ['./exibe-usuario.component.css']\r\n})\r\nexport class ExibeUsuarioComponent implements OnInit {\r\n\r\n  lista: Usuario[];\r\n  novo: Novousuario[];\r\n  count: number;\r\n  constructor(private cadastroService: CadastroService) {\r\n    this.lista = [];\r\n    this.novo = [];\r\n    this.count = 0;\r\n   }\r\n\r\n  ngOnInit(): void {\r\n    this.lista = this.cadastroService.listarUsuario();\r\n    this.novo = this.cadastroService.listarNovo();\r\n  }\r\n\r\n  excluir(count:number){\r\n    this.cadastroService.excluirUsuario(count);\r\n  }\r\n\r\n  editar(nome:string, numero:string,index:number){\r\n    const usuario = new Novousuario(nome, numero);\r\n    this.cadastroService.editarUsuario(usuario,index);\r\n    this.count = index;\r\n  }\r\n\r\n  atualizar(nome:string, numero:string,id:number,form:HTMLFormElement){\r\n    const usuario = new Usuario(nome, numero);\r\n    this.cadastroService.atualizarUsuario(usuario,id);\r\n    // for (const nv of this.novo) {\r\n    //   this.count = this.novo.indexOf(nv);\r\n    // }\r\n    console.log(this.count)\r\n    form.reset();\r\n    // console.log(this.cadastroService.atualizarUsuario(usuario,id));\r\n    //console.log(\"index: \",this.novo.indexOf(usuario));\r\n    }\r\n\r\n}\r\n","<nav class=\"nav navbar navbar-dark bg-dark\">\n  <div class=\"navbar-brend\">\n    <li class=\"nav-item\">\n      <a class=\"nav-link active text-white\" routerLink=\"/\">Cadastro de usu√°rios</a>\n    </li>\n  </div>\n</nav>\n\n<h3 class=\"text-center m-3\">Lista de usu√°rios</h3>\n<div class=\"container p-3\">\n  <table [hidden]=\"lista.length == 0\" class=\"table table-bordered table-hover\">\n    <thead>\n      <tr>\n        <th>Nome</th>\n        <th>Telefone</th>\n        <th>Exclus√£o</th>\n        <th>Edi√ß√£o</th>\n      </tr>\n    </thead>\n    <tbody *ngFor=\"let usuario of lista; index as i\">\n      <tr>\n        <td>{{ usuario.nome }}</td>\n        <td>{{ usuario.telefone }}</td>\n        <td><input class=\"btn btn-danger\" type=\"button\" (click)=\"excluir(i)\" value=\"Excluir\"></td>\n        <td><input class=\"btn btn-warning\" type=\"button\" (click)=\"editar(usuario.nome,usuario.telefone,i)\" value=\"Editar\"></td>\n      </tr>\n    </tbody>\n  </table>\n</div>\n\n<form #form>\n  <h3 class=\"text-center m-3\">Edi√ß√£o de usu√°rios</h3>\n  <div class=\"container\">\n    <div class=\"form-group m-3\">\n      <label for=\"nome2\">Nome</label>\n      <input type=\"text\" id=\"nome2\" name=\"nome2\" class=\"form-control\" [value]=\"novo[count]?.nome\" placeholder=\"Nome Sobrenome...\" #nome2>\n    </div>\n    <div class=\"form-group m-3\">\n      <label for=\"fone2\">Telefone</label>\n      <input type=\"text\" id=\"fone2\" name=\"fone2\" class=\"form-control\" [value]=\"novo[count]?.telefone\" placeholder=\"(xx) xxxxx-xxxx\" #fone2>\n    </div>\n    <div class=\"m-3\">\n      <input type=\"button\" [disabled]=\"novo.length == 0\" class=\"btn btn-success\" value=\"Atualizar\" (click)=\"atualizar(nome2.value, fone2.value,count,form)\">\n    </div>\n  </div>\n</form>\n","import { Injectable } from '@angular/core';\nimport { Novousuario } from './novousuario';\nimport { Usuario } from './usuario';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CadastroService {\n  user: Usuario[];\n  new: Novousuario[];\n  constructor() {\n    this.user = [];\n    this.new = [];\n  }\n\n  listarUsuario(): Usuario[]{\n    return this.user;\n  }\n\n  listarNovo(): Novousuario[]{\n    return this.new;\n  }\n\n  adicionarUsuario(usuario: Usuario): void {\n    this.user.push(usuario);\n  }\n\n  excluirUsuario(index:number){\n    this.user.splice(index, 1);\n    this.new.splice(index, 1);\n    if(this.user.length == 0){\n      this.new.length == 0\n    }\n  }\n\n  editarUsuario(novo: Novousuario,index:number){\n    //clicando em editar, adiciona os novos dados inseridos em usuario para novousuario\n    this.new.push(novo);\n    console.log(this.new.indexOf(novo));\n  }\n\n  atualizarUsuario(usuario:Usuario,id:number){\n    this.user[id].nome = usuario.nome;\n    this.user[id].telefone = usuario.telefone;\n    console.log(\"index:\",id,\"nome:\",this.user[id].nome,\"fone:\",this.user[id].telefone);\n    this.new.splice(id, 1);\n  }\n\n  getIndex(){\n    //\n  }\n}\n","export class Novousuario {\n  nome:string;\n  telefone:string;\n\n  constructor(nome:string, telefone:string) {\n    this.nome = nome;\n    this.telefone = telefone;\n  }\n}\n","export class Usuario {\n  nome:string;\n  telefone:string;\n\n  constructor(nome:string, telefone:string) {\n    this.nome = nome;\n    this.telefone = telefone;\n  }\n\n  // getNome():string {\n  //   return this.nome;\n  // }\n\n  // getTelefone():string {\n  //   return this.telefone;\n  // }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":[],"sourceRoot":"webpack:///"}